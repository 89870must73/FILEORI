#!/bin/bash
# initialisasi var
export DEBIAN_FRONTEND=noninteractive
OS=`uname -m`;
MYIP=$(wget -qO- ipv4.icanhazip.com);
MYIP2="s/xxxxxxxxx/$MYIP/g";
# OpenVPN Ports
OpenVPN_TCP_Port='1103'
OpenVPN_UDP_Port='1194'
OpenVPN_SSL_Port='1101'

# Yahayuk
HAYUK='$MYIP'

# Squid Ports
Squid_Port1='8080'
Squid_Port2='3128'
Squid_Port3='60000'

# OpenVPN Config Download Port
OvpnDownload_Port='85' # Before changing this value, please read this document. It contains all unsafe ports for Google Chrome Browser, please read from line #23 to line #89: https://chromium.googlesource.com/chromium/src.git/+/refs/heads/master/net/base/port_util.cc


# set time GMT +7
ln -fs /usr/share/zoneinfo/Asia/Kuala_Lumpur /etc/localtime

apt-get update -y
apt-get upgrade -y
# Removing some firewall tools that may affect other services
apt-get remove --purge ufw firewalld -y

# Installing some important machine essentials
apt-get install nano wget curl zip unzip tar gzip p7zip-full bc rc openssl cron net-tools dnsutils dos2unix screen bzip2 ccrypt -y

# Now installing all our wanted services
apt-get install dropbear stunnel4 ca-certificates nginx ruby apt-transport-https lsb-release squid -y

# Installing all required packages to install Webmin
apt-get install perl libnet-ssleay-perl openssl libauthen-pam-perl libpam-runtime libio-pty-perl apt-show-versions python dbus libxml-parser-perl -y
apt-get install shared-mime-info jq fail2ban -y

# Installing a text colorizer
gem install lolcat

# Trying to remove obsolette packages after installation
apt-get autoremove -y

# Installing OpenVPN by pulling its repository inside sources.list file
rm -rf /etc/apt/sources.list.d/openvpn*
echo "deb http://build.openvpn.net/debian/openvpn/stable $(lsb_release -sc) main" > /etc/apt/sources.list.d/openvpn.list
wget -qO - http://build.openvpn.net/debian/openvpn/stable/pubkey.gpg|apt-key add -
apt-get update
apt-get install openvpn -y

# Download the webmin .deb package
# You may change its webmin version depends on the link you've loaded in this variable(.deb file only, do not load .zip or .tar.gz file):
 
WebminFile='https://github.com/johndesu090/AutoScriptDB/raw/master/Files/Plugins/webmin_1.920_all.deb'
wget -qO webmin.deb "$WebminFile"
Installing .deb package for webmin
dpkg --install webmin.deb
rm -rf webmin.deb
# Configuring webmin server config to use only http instead of https
sed -i 's|ssl=1|ssl=0|g' /etc/webmin/miniserv.conf

# Then restart to take effect
systemctl restart webmin

mkdir -p /etc/openvpn
 # Creating server.conf, ca.crt, server.crt and server.key
 cat <<'myOpenVPNconf' > /etc/openvpn/server_tcp.conf
# OpenVPN TCP
port OVPNTCP
proto tcp
dev tun
dev-type tun
sndbuf 0
rcvbuf 0
ca /etc/openvpn/ca.crt
cert /etc/openvpn/server.crt
key /etc/openvpn/server.key
dh /etc/openvpn/dh2048.pem
topology subnet
server 10.9.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"
keepalive 10 120
cipher AES-256-CBC
auth SHA256
comp-lzo
user nobody
group nogroup
persist-tun
status openvpn-status.log
verb 2
mute 3
verify-client-cert none
username-as-common-name
plugin /etc/openvpn/plugins/openvpn-plugin-auth-pam.so login
myOpenVPNconf

cat <<'myOpenVPNconf2' > /etc/openvpn/server_udp.conf
# OpenVPN UDP
port OVPNUDP
proto udp
dev tun
ca /etc/openvpn/ca.crt
cert /etc/openvpn/server.crt
key /etc/openvpn/server.key
dh /etc/openvpn/dh2048.pem
verify-client-cert none
username-as-common-name
key-direction 0
plugin /etc/openvpn/plugins/openvpn-plugin-auth-pam.so login
server 10.201.0.0 255.255.0.0
ifconfig-pool-persist ipp.txt
push "route-method exe"
push "route-delay 2"
keepalive 10 120
comp-lzo
user nobody
group nogroup
persist-key
persist-tun
status openvpn-status.log
log udp.log
verb 2
ncp-disable
cipher none
auth none
myOpenVPNconf2

cat <<'myOpenVPNconf3' > /etc/openvpn/server_ssl.conf
# OpenVPN SSL
port OVPNSSL
proto tcp
dev tun
ca /etc/openvpn/ca.crt
cert /etc/openvpn/server.crt
key /etc/openvpn/server.key
dh /etc/openvpn/dh2048.pem
verify-client-cert none
username-as-common-name
key-direction 0
plugin /etc/openvpn/plugins/openvpn-plugin-auth-pam.so login
server 10.201.0.0 255.255.0.0
ifconfig-pool-persist ipp.txt
push "route-method exe"
push "route-delay 2"
keepalive 10 120
comp-lzo
user nobody
group nogroup
persist-key
persist-tun
status openvpn-status.log
log udp.log
verb 2
ncp-disable
cipher none
auth none
myOpenVPNconf3

 cat <<'EOF7'> /etc/openvpn/ca.crt
-----BEGIN CERTIFICATE-----
MIIEmzCCA4OgAwIBAgIJAITInYiGbcQSMA0GCSqGSIb3DQEBCwUAMIGPMQswCQYD
VQQGEwJDTjEQMA4GA1UECBMHQmVpSmluZzEQMA4GA1UEBxMHQmVpSmluZzELMAkG
A1UEChMCT1AxDDAKBgNVBAsTAzIxSzEOMAwGA1UEAxMFT1AgQ0ExEDAOBgNVBCkT
B0Vhc3lSU0ExHzAdBgkqhkiG9w0BCQEWEDIxa2l4Y0BnbWFpbC5jb20wHhcNMTgw
MjA1MDM0OTQyWhcNMjgwMjAzMDM0OTQyWjCBjzELMAkGA1UEBhMCQ04xEDAOBgNV
BAgTB0JlaUppbmcxEDAOBgNVBAcTB0JlaUppbmcxCzAJBgNVBAoTAk9QMQwwCgYD
VQQLEwMyMUsxDjAMBgNVBAMTBU9QIENBMRAwDgYDVQQpEwdFYXN5UlNBMR8wHQYJ
KoZIhvcNAQkBFhAyMWtpeGNAZ21haWwuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEA3ozjciJpPnjRGDO2n+QC9yfPgban3TKNBPZ1XHvIjn05pk8G
TKJ2kqU7Gr1coDni3cBIUuxG9Gq1Y108vyu4YvQF1y1CpcLyMjQNVC3mUeVzBXt5
L3kUtykykz8kSMICorfDBSwYqR6eF6lMboLEH09Qb1iCe1ynhA83eRDdlElOiz8S
wYWoGO7QfgIvcU1oNm8Wb0HfXS1NDUYzt98RcKibaVRvY2pNPaDW9n4BuwIlluU9
aEVI+PgZuFNADRjkHVhgVwJa7YUQiBICNRf6BIrFg7jY9J68J26ItVpvCsWJjvwN
YpfXAXdIYp6cufPW73GriM1VLjJ8e9B0HzPrAQIDAQABo4H3MIH0MB0GA1UdDgQW
BBTgQPEaLkLIW+mQzK4/dCcpP4pGIjCBxAYDVR0jBIG8MIG5gBTgQPEaLkLIW+mQ
zK4/dCcpP4pGIqGBlaSBkjCBjzELMAkGA1UEBhMCQ04xEDAOBgNVBAgTB0JlaUpp
bmcxEDAOBgNVBAcTB0JlaUppbmcxCzAJBgNVBAoTAk9QMQwwCgYDVQQLEwMyMUsx
DjAMBgNVBAMTBU9QIENBMRAwDgYDVQQpEwdFYXN5UlNBMR8wHQYJKoZIhvcNAQkB
FhAyMWtpeGNAZ21haWwuY29tggkAhMidiIZtxBIwDAYDVR0TBAUwAwEB/zANBgkq
hkiG9w0BAQsFAAOCAQEAws6jLkC3hebT4bphTTm1CCTJ20nzlsg2+mURh5ZqGL+I
YBQBCyCrja9r6jpNIvPBaHJsu4WniJphIZbBKM0HjapjzIZ+9bq7HsXsEFqaLVsd
nW58IJhcv3I2q5FGZpwDODPzj75ZIJIYXHPM0OdXjlWU+r2z08xWwKEWxKU3vt7H
YWz13HDoHSea8oxfeXeGlWbyAWEkbM64nQkLQ0j/4NrtHSx6vLUBmCbOb2PbjQEb
dFizLpHrFqqBYDVEDL4MzFXa5SItgJ978FxiFiRnsOzGP1us5aoT8q6NvtFQ+aaj
pce0Av3y2knjUyKEA5UF4gXC3dpaE1rd0V0FY2qSUA==
-----END CERTIFICATE-----
EOF7
 cat <<'EOF9'> /etc/openvpn/server.crt
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 1 (0x1)
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: C=CN, ST=BeiJing, L=BeiJing, O=OP, OU=21K, CN=OP CA/name=EasyRSA/emailAddress=21kixc@gmail.com
        Validity
            Not Before: Feb  5 03:51:13 2018 GMT
            Not After : Feb  3 03:51:13 2028 GMT
        Subject: C=CN, ST=BeiJing, L=BeiJing, O=OP, OU=21K, CN=server/name=EasyRSA/emailAddress=21kixc@gmail.com
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (2048 bit)
                Modulus:
                    00:ac:94:bc:c6:6c:64:08:72:b8:36:90:a5:2b:31:
                    42:a0:ac:44:69:a3:7b:67:8e:5f:8b:bb:7d:31:54:
                    d5:30:e2:b6:2c:c1:a9:db:55:4f:ca:18:6d:87:56:
                    bb:64:b9:43:84:aa:38:bb:c4:7b:07:2f:04:f6:20:
                    59:47:db:1b:3f:b5:06:dc:b2:72:49:fd:4f:6f:74:
                    18:94:ce:94:ed:28:b1:54:51:1b:18:f1:62:5b:60:
                    03:44:b4:b9:e1:a0:81:93:27:b5:72:b5:fc:d6:d0:
                    d2:3d:2f:3c:43:2e:58:33:09:b5:ef:b0:e9:7f:6c:
                    81:e3:da:4c:8a:5f:bc:64:f6:55:37:14:ec:01:15:
                    8e:46:45:a3:bb:ce:bd:b1:2c:36:d7:49:c1:ad:7a:
                    c3:e4:4c:46:be:54:8c:3b:24:9a:58:cd:a6:c0:87:
                    13:ae:61:eb:d2:cf:6d:8c:34:54:54:82:03:70:6d:
                    c5:ad:c9:f9:d3:22:3b:7a:8f:81:8d:06:47:1a:70:
                    ec:1b:4f:c6:e1:d4:50:2b:58:8e:96:ec:b5:9c:23:
                    f2:ea:e9:42:ea:00:0c:d2:bc:d4:53:d7:64:92:ec:
                    19:9a:09:8a:10:4e:1d:77:e5:dd:7a:a6:35:6f:b4:
                    30:00:7d:35:e9:ef:79:a2:8c:94:cc:84:56:30:7e:
                    a2:8f
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Basic Constraints: 
                CA:FALSE
            Netscape Cert Type: 
                SSL Server
            Netscape Comment: 
                Easy-RSA Generated Server Certificate
            X509v3 Subject Key Identifier: 
                23:14:06:F1:AE:B9:B9:0D:CE:68:FF:69:3E:3B:A1:C8:8F:9B:F8:E8
            X509v3 Authority Key Identifier: 
                keyid:E0:40:F1:1A:2E:42:C8:5B:E9:90:CC:AE:3F:74:27:29:3F:8A:46:22
                DirName:/C=CN/ST=BeiJing/L=BeiJing/O=OP/OU=21K/CN=OP CA/name=EasyRSA/emailAddress=21kixc@gmail.com
                serial:84:C8:9D:88:86:6D:C4:12

            X509v3 Extended Key Usage: 
                TLS Web Server Authentication
            X509v3 Key Usage: 
                Digital Signature, Key Encipherment
    Signature Algorithm: sha256WithRSAEncryption
         1f:67:31:0d:dd:9e:3d:12:16:1c:09:09:4b:90:22:87:49:b4:
         09:27:08:6d:02:34:04:ca:fb:e2:fa:1d:0c:16:d1:1b:5e:46:
         5f:e6:8e:10:6b:68:95:ef:63:cd:0e:93:49:63:41:36:8c:68:
         44:e5:19:3c:8b:6b:f1:77:21:e6:31:16:ad:63:87:f1:07:99:
         45:7c:ef:b4:dd:b6:14:18:a9:78:99:21:b4:e3:f0:29:25:3b:
         57:86:96:82:cb:ff:85:34:2f:9e:c9:f1:26:12:81:ae:4c:a5:
         9d:f4:cd:f1:7b:1b:b7:33:fd:1f:2d:95:fa:26:b6:2f:68:cd:
         46:12:69:d2:69:2f:06:80:f8:16:1c:17:2e:c6:ca:f9:17:8c:
         83:af:82:4f:71:2f:db:fe:19:5a:f6:1d:2b:72:46:f1:cf:e8:
         a6:1a:18:7d:77:80:97:c7:c3:2e:d2:11:04:31:5f:7c:2b:26:
         dd:b4:68:ed:0d:17:23:18:5c:ab:a4:f1:55:69:fa:0e:88:1f:
         3c:21:47:d4:32:da:db:d8:c4:e1:f8:57:4b:ad:c8:fd:02:4d:
         b2:d3:40:dd:db:d7:7d:67:cb:d8:0b:0c:cd:ec:49:0a:bd:83:
         ec:87:c1:50:82:10:dc:ee:af:25:7c:7d:9f:90:86:85:48:59:
         16:24:13:fb
-----BEGIN CERTIFICATE-----
MIIE/jCCA+agAwIBAgIBATANBgkqhkiG9w0BAQsFADCBjzELMAkGA1UEBhMCQ04x
EDAOBgNVBAgTB0JlaUppbmcxEDAOBgNVBAcTB0JlaUppbmcxCzAJBgNVBAoTAk9Q
MQwwCgYDVQQLEwMyMUsxDjAMBgNVBAMTBU9QIENBMRAwDgYDVQQpEwdFYXN5UlNB
MR8wHQYJKoZIhvcNAQkBFhAyMWtpeGNAZ21haWwuY29tMB4XDTE4MDIwNTAzNTEx
M1oXDTI4MDIwMzAzNTExM1owgZAxCzAJBgNVBAYTAkNOMRAwDgYDVQQIEwdCZWlK
aW5nMRAwDgYDVQQHEwdCZWlKaW5nMQswCQYDVQQKEwJPUDEMMAoGA1UECxMDMjFL
MQ8wDQYDVQQDEwZzZXJ2ZXIxEDAOBgNVBCkTB0Vhc3lSU0ExHzAdBgkqhkiG9w0B
CQEWEDIxa2l4Y0BnbWFpbC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQCslLzGbGQIcrg2kKUrMUKgrERpo3tnjl+Lu30xVNUw4rYswanbVU/KGG2H
VrtkuUOEqji7xHsHLwT2IFlH2xs/tQbcsnJJ/U9vdBiUzpTtKLFUURsY8WJbYANE
tLnhoIGTJ7VytfzW0NI9LzxDLlgzCbXvsOl/bIHj2kyKX7xk9lU3FOwBFY5GRaO7
zr2xLDbXScGtesPkTEa+VIw7JJpYzabAhxOuYevSz22MNFRUggNwbcWtyfnTIjt6
j4GNBkcacOwbT8bh1FArWI6W7LWcI/Lq6ULqAAzSvNRT12SS7BmaCYoQTh135d16
pjVvtDAAfTXp73mijJTMhFYwfqKPAgMBAAGjggFgMIIBXDAJBgNVHRMEAjAAMBEG
CWCGSAGG+EIBAQQEAwIGQDA0BglghkgBhvhCAQ0EJxYlRWFzeS1SU0EgR2VuZXJh
dGVkIFNlcnZlciBDZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQUIxQG8a65uQ3OaP9pPjuh
yI+b+OgwgcQGA1UdIwSBvDCBuYAU4EDxGi5CyFvpkMyuP3QnKT+KRiKhgZWkgZIw
gY8xCzAJBgNVBAYTAkNOMRAwDgYDVQQIEwdCZWlKaW5nMRAwDgYDVQQHEwdCZWlK
aW5nMQswCQYDVQQKEwJPUDEMMAoGA1UECxMDMjFLMQ4wDAYDVQQDEwVPUCBDQTEQ
MA4GA1UEKRMHRWFzeVJTQTEfMB0GCSqGSIb3DQEJARYQMjFraXhjQGdtYWlsLmNv
bYIJAITInYiGbcQSMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAsGA1UdDwQEAwIFoDAN
BgkqhkiG9w0BAQsFAAOCAQEAH2cxDd2ePRIWHAkJS5Aih0m0CScIbQI0BMr74vod
DBbRG15GX+aOEGtole9jzQ6TSWNBNoxoROUZPItr8Xch5jEWrWOH8QeZRXzvtN22
FBipeJkhtOPwKSU7V4aWgsv/hTQvnsnxJhKBrkylnfTN8XsbtzP9Hy2V+ia2L2jN
RhJp0mkvBoD4FhwXLsbK+ReMg6+CT3Ev2/4ZWvYdK3JG8c/ophoYfXeAl8fDLtIR
BDFffCsm3bRo7Q0XIxhcq6TxVWn6DogfPCFH1DLa29jE4fhXS63I/QJNstNA3dvX
fWfL2AsMzexJCr2D7IfBUIIQ3O6vJXx9n5CGhUhZFiQT+w==
-----END CERTIFICATE-----
EOF9
 cat <<'EOF10'> /etc/openvpn/server.key
-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCslLzGbGQIcrg2
kKUrMUKgrERpo3tnjl+Lu30xVNUw4rYswanbVU/KGG2HVrtkuUOEqji7xHsHLwT2
IFlH2xs/tQbcsnJJ/U9vdBiUzpTtKLFUURsY8WJbYANEtLnhoIGTJ7VytfzW0NI9
LzxDLlgzCbXvsOl/bIHj2kyKX7xk9lU3FOwBFY5GRaO7zr2xLDbXScGtesPkTEa+
VIw7JJpYzabAhxOuYevSz22MNFRUggNwbcWtyfnTIjt6j4GNBkcacOwbT8bh1FAr
WI6W7LWcI/Lq6ULqAAzSvNRT12SS7BmaCYoQTh135d16pjVvtDAAfTXp73mijJTM
hFYwfqKPAgMBAAECggEAGJGsNktkClfapdn9yaJfq+QacTeW7+0y6P+uGQHMwALm
kISZm+IPU+QaY7QTRYmidRaOsRyNrz4gZLHCRBqLTIyHB5BX+PSZBHLwtO6cAQ9T
/370bp6etAd9L6DS/a4OBFcY29XQwvxDkfZRi/bjE5EEV7VF6KAX9co0L1blyTGU
mTMe76Y2H7/h1xNB5ke2unJLJkJWjmTtyzEQYiRZ8810z+IhiaGvDBZHhxBcndru
pmOy8zxwMJcXdLCmegfFi1kx6TOoxPKYWLJI81l5RXo/mLOk/SfG6sK+ZW0MBJRT
QPWnSGo/VpxFeO/wXLUN4Jb+m6z0XgLtjXg180ht0QKBgQDZ4ETLc7IFe/bQAoez
YmVuzS5UDlMUSNFEueXZj5V8QnAkbuJry4bUYKfjk3YWUgdIgWbhUze7POHBGDlP
rTzLVynsA9cQ/Dyl6EYjY7FKcRs4FBnRwuyu6Ki2zWqW1VcmpXgW1QYLa+zNtIZS
wl6AR9HqE2+F9EkmSYLF6hyuMwKBgQDKx3uO8XPWxWx4xEcRgl8JZK48DYa1yc+D
TblllxHi3wLH67YRT5aIK0WtRoGqxPmXZGYQ/3AScBPOoDwYqsTwurI/9RNansOV
+h+ZTn6EDljD+joFaFujNX0QE10fyqIRtLi8NzvI7WrRnstI5Qz1bLIfeqXs54Tp
Xq8nlYEmNQKBgEJ+KGCzGXSFBakr7IA5ml07b1Ul3gMFyiAgX96K7IM0v4bO9HkT
bz2nlfVlTpe3RxPAskY4IH0bMoa8vtjrNO+V1Wx7K4q6gEPd5HHuffALHtR5hfu3
coZa6QqJHGuWBnf77e+B6ctYj7ejzY66VR7vTEgU0GdgS2bM7oU6UrBzAoGATCib
yVX58cH4OWtOXc8fLoH3xmo2G/SN0XzRkswoVZL4kml+2gWQPdgytR9z99U/AJMe
mme1idc6OTKJH6KTkO4toEPFXxWd06g7UfLfJW3V/NTwEbPeJvAh5nW/Vf9e21OK
xnXgKFiy88O2CcytD0ghph0EUHOrwZJkKnPGK7kCgYEAqghDDtWqkCd1shv3UuY2
7R0jhaui4MsNz+hVI6cD5m0IK+aEBmsEZ+6ifmGVi8HIvLHCtoYcIahCln31h+NR
uS1gtGTLcXL++K7xni9xSZZ8E3tj1d4hHqBGbOkJ6gOVYh8G9/ul6z0cq1NVPVfi
Q+3SubL3Oob8tObE5UdNK/Q=
-----END PRIVATE KEY-----
EOF10
 cat <<'EOF18'> /etc/openvpn/ta.key
#
# 2048 bit OpenVPN static key
#
-----BEGIN OpenVPN Static key V1-----
dedf17ed486c4bb736e5eebaf06e9850
1d26650b0f85099f9daed774880654f8
21fb0cc4c4ee4e20defbe15a488f2d5c
33e3dc7d2a5adaa6f7fe66801332f1a8
b676a12e625e25d354719fddd5df2799
04060ca5c08e10ab3f12b54c60b15e64
a5c500a2a71dcd31b2e88b2be87d43cc
4b73cbfa734eba89858fc91b85dd9feb
6e93a4422116b8fcc0b563c0336a0e1a
3d537dc7a54685fc3faafcf429ad4261
535021c3a96c34e1004cd59579289690
d3be5e4d3a546486a19a8bab192bc096
efa13b6dbcbf9c63e5c5488c36ffa59d
945db353e023ffcbd7467a4f8685a060
40a13da4fb822e1b16e998c5941563fc
82011b788e913235dac30d91bc29759b
-----END OpenVPN Static key V1-----
EOF18
 cat <<'EOF13'> /etc/openvpn/dh2048.pem
-----BEGIN DH PARAMETERS-----
MIIBCAKCAQEAxoNLELO1dQDFW0ZRRbPG9Cv1ifPSqGQB0tIusmTrn22nMqND06fK
NfJNQhnEahwYlbA2DEXxjZ7gpXWA6mrKUIVTFfnFohmHhLgkb9QUc0m5LwVgcd/w
25s+3JEcV3MJ70Cf64wG+KVHMJeISagDlKlE+2f7MJkkSV1vgvfQOpnVp+DF38tL
L57p4njl0n61NNUnbvH0YEPbvKPk0CJ3EGGQE/uhwKIU+pJt/o9S0wppq9sUrOuD
1eelmMZPuWH3aSVIUqiucEsczGn5GfqIc2KNHAMfJ5JhLOjjJvb1cewD2DpIiI2I
bVexIf9WpjXw+LZrjSifNgQ1Eqfdd3tDiwIBAg==
-----END DH PARAMETERS-----
EOF13

 # Getting all dns inside resolv.conf then use as Default DNS for our openvpn server
 grep -v '#' /etc/resolv.conf | grep 'nameserver' | grep -E -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | while read -r line; do
	echo "push \"dhcp-option DNS $line\"" >> /etc/openvpn/server_tcp.conf
done

 # Creating a New update message in server.conf
cat <<'NUovpn' > /etc/openvpn/server.conf

 # New Update are now released, OpenVPN Server
 # are now running both TCP and UDP Protocol. (Both are only running on IPv4)
 # But our native server.conf are now removed and divided
 # Into two different configs base on their Protocols:
 #  * OpenVPN TCP (located at /etc/openvpn/server_tcp.conf
 #  * OpenVPN UDP (located at /etc/openvpn/server_udp.conf
 # 
 # Also other logging files like
 # status logs and server logs
 # are moved into new different file names:
 #  * OpenVPN TCP Server logs (/etc/openvpn/tcp.log)
 #  * OpenVPN UDP Server logs (/etc/openvpn/udp.log)
 #  * OpenVPN TCP Status logs (/etc/openvpn/tcp_stats.log)
 #  * OpenVPN UDP Status logs (/etc/openvpn/udp_stats.log)
 #
 # Server ports are configured base on env vars
 # executed/raised from this script (OpenVPN_TCP_Port/OpenVPN_UDP_Port)
 #
 # Enjoy the new update
 # Script Updated by SL
NUovpn

 # setting openvpn server port
sed -i "s|OVPNTCP|$OpenVPN_TCP_Port|g" /etc/openvpn/server_tcp.conf
sed -i "s|OVPNUDP|$OpenVPN_UDP_Port|g" /etc/openvpn/server_udp.conf
sed -i "s|OVPNSSL|$OpenVPN_SSL_Port|g" /etc/openvpn/server_ssl.conf 
 
# Getting some OpenVPN plugins for unix authentication
cd
wget https://github.com/johndesu090/AutoScriptDB/raw/master/Files/Plugins/plugin.tgz
tar -xzvf /root/plugin.tgz -C /etc/openvpn/
rm -f plugin.tgz
#
systemctl start openvpn@server_tcp
systemctl enable openvpn@server_tcp
systemctl start openvpn@server_udp
systemctl enable openvpn@server_udp
sysctl -w net.ipv4.ip_forward=1
sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/g' /etc/sysctl.conf
iptables -t nat -I POSTROUTING -s 10.200.0.0/16 -o eth0 -j MASQUERADE
iptables -t nat -I POSTROUTING -s 10.201.0.0/16 -o eth0 -j MASQUERADE
iptables -t nat -I POSTROUTING -s 192.168.0.0/24 -o eth0 -j MASQUERADE
iptables -t nat -I POSTROUTING -s 192.168.100.0/24 -o eth0 -j MASQUERADE
iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE
iptables-save > /etc/iptables.up.rules
wget -O /etc/network/if-up.d/iptables "https://raw.githubusercontent.com/fisabiliyusri/Betatest/master/debian9/iptables"
chmod +x /etc/network/if-up.d/iptables
sed -i 's|LimitNPROC|#LimitNPROC|g' /lib/systemd/system/openvpn@.service
systemctl daemon-reload
/etc/init.d/openvpn restart

# Removing Duplicate Squid config
rm -rf /etc/squid/squid.con*

# Creating Squid server config using cat eof tricks
cat <<'mySquid' > /etc/squid/squid.conf
# My Squid Proxy Server Config
acl localhost src 127.0.0.1/32 ::1
acl to_localhost dst 127.0.0.0/8 0.0.0.0/32 ::1
acl VPN dst xxxxxxxxx/32
acl SSH dst xxxxxxxxx/32
# Izinkan Port SSL
acl SSL_ports port 1-62100
acl SSL_ports port 443
acl SSL_ports port 222
acl SSL_ports port 43
acl SSL_ports port 69
acl SSL_ports port 600
acl SSL_ports port 700
acl SSL_ports port 800
acl SSL_ports port 900
acl SSL_ports port 444
acl SSL_ports port 777
acl SSL_ports port 540
acl SSL_ports port 551
acl SSL_ports port 9900
acl SSL_ports port 569
acl SSL_ports port 8181
acl SSL_ports port 3129
# Izinkan port ssh vpn
acl Safe_ports port 1-62100
acl Safe_ports port 569
acl Safe_ports port 1945
acl Safe_ports port 22
acl Safe_ports port 143
acl Safe_ports port 200
acl Safe_ports port 400
acl Safe_ports port 8000
acl Safe_ports port 1078
acl Safe_ports port 450
acl Safe_ports port 77
acl Safe_ports port 550
acl Safe_ports port 9000
acl Safe_ports port 80
acl CONNECT method CONNECT
http_access allow VPN
http_access allow SSH
http_access allow localhost
http_access deny all 
http_port 0.0.0.0:Squid_Port1
http_port 0.0.0.0:Squid_Port2
http_port 0.0.0.0:Squid_Port3
### Allow Headers
request_header_access Allow allow all 
request_header_access Authorization allow all 
request_header_access WWW-Authenticate allow all 
request_header_access Proxy-Authorization allow all 
request_header_access Proxy-Authenticate allow all 
request_header_access Cache-Control allow all 
request_header_access Content-Encoding allow all 
request_header_access Content-Length allow all 
request_header_access Content-Type allow all 
request_header_access Date allow all 
request_header_access Expires allow all 
request_header_access Host allow all 
request_header_access If-Modified-Since allow all 
request_header_access Last-Modified allow all 
request_header_access Location allow all 
request_header_access Pragma allow all 
request_header_access Accept allow all 
request_header_access Accept-Charset allow all 
request_header_access Accept-Encoding allow all 
request_header_access Accept-Language allow all 
request_header_access Content-Language allow all 
request_header_access Mime-Version allow all 
request_header_access Retry-After allow all 
request_header_access Title allow all 
request_header_access Connection allow all 
request_header_access Proxy-Connection allow all 
request_header_access User-Agent allow all 
request_header_access Cookie allow all 
request_header_access All deny all
### HTTP Anonymizer Paranoid
reply_header_access Allow allow all 
reply_header_access Authorization allow all 
reply_header_access WWW-Authenticate allow all 
reply_header_access Proxy-Authorization allow all 
reply_header_access Proxy-Authenticate allow all 
reply_header_access Cache-Control allow all 
reply_header_access Content-Encoding allow all 
reply_header_access Content-Length allow all 
reply_header_access Content-Type allow all 
reply_header_access Date allow all 
reply_header_access Expires allow all 
reply_header_access Host allow all 
reply_header_access If-Modified-Since allow all 
reply_header_access Last-Modified allow all 
reply_header_access Location allow all 
reply_header_access Pragma allow all 
reply_header_access Accept allow all 
reply_header_access Accept-Charset allow all 
reply_header_access Accept-Encoding allow all 
reply_header_access Accept-Language allow all 
reply_header_access Content-Language allow all 
reply_header_access Mime-Version allow all 
reply_header_access Retry-After allow all 
reply_header_access Title allow all 
reply_header_access Connection allow all 
reply_header_access Proxy-Connection allow all 
reply_header_access User-Agent allow all 
reply_header_access Cookie allow all 
reply_header_access All deny all
### CoreDump
coredump_dir /var/spool/squid
dns_nameservers 8.8.8.8 8.8.4.4
refresh_pattern ^ftp: 1440 20% 10080
refresh_pattern ^gopher: 1440 0% 1440
refresh_pattern -i (/cgi-bin/|\?) 0 0% 0
refresh_pattern . 0 20% 4320
visible_hostname SulaimanL
mySquid

# setting
MYIP=$(wget -qO- ipv4.icanhazip.com);
MYIP2="s|xxxxxxxxx|$MYIP|g";
sed -i "s|xxxxxxxxx|$MYIP|g" /etc/squid/squid.conf

# Setting machine's IP Address inside of our Squid config(security that only allows this machine to use this proxy server)
sed -i "s|IP-ADDRESS|$IPADDR|g" /etc/squid/squid.conf
# Setting squid ports
sed -i "s|Squid_Port1|$Squid_Port1|g" /etc/squid/squid.conf
sed -i "s|Squid_Port2|$Squid_Port2|g" /etc/squid/squid.conf
sed -i "s|Squid_Port3|$Squid_Port3|g" /etc/squid/squid.conf

# Starting Proxy server
echo -e "Restarting proxy server..."
systemctl restart squid

# Creating nginx config for our ovpn config downloads webserver
cat <<'myNginxC' > /etc/nginx/conf.d/sl-ovpn-config.conf
# My OpenVPN Config Download Directory
server {
 listen 0.0.0.0:myNginx;
 server_name localhost;
 root /var/www/openvpn;
 index index.html;
}
myNginxC

# Setting our nginx config port for .ovpn download site
sed -i "s|myNginx|$OvpnDownload_Port|g" /etc/nginx/conf.d/sl-ovpn-config.conf

# Removing Default nginx page(port 80)
rm -rf /etc/nginx/sites-*

# Creating our root directory for all of our .ovpn configs
rm -rf /var/www/openvpn
mkdir -p /var/www/openvpn

#  Buat Config OpenVPN 

cat <<EOF15> /var/www/openvpn/tcp.ovpn
# Mac Quan Inc
# Thanks for using this script, Enjoy Highspeed OpenVPN Service
client
dev tun
proto tcp
setenv FRIENDLY_NAME "Mac Quan Inc - VPN Proxy"
remote $MYIP $OpenVPN_TCP_Port
http-proxy $MYIP $Squid_Port2
http-proxy-retry
resolv-retry infinite
route-method exe
nobind
persist-key
persist-tun
comp-lzo
cipher AES-256-CBC
auth SHA256
push "redirect-gateway def1 bypass-dhcp"
verb 3
push-peer-info
ping 10
ping-restart 60
hand-window 70
server-poll-timeout 4
reneg-sec 2592000
sndbuf 0
rcvbuf 0
remote-cert-tls server
key-direction 1
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
<tls-auth>
$(cat /etc/openvpn/ta.key)
</tls-auth>
EOF15

cat <<EOF16> /var/www/openvpn/sun-tutcp.ovpn
# Mac Quan Inc
# Thanks for using this script, Enjoy Highspeed OpenVPN Service
client
dev tun
proto tcp
setenv FRIENDLY_NAME "Mac Quan Inc - VPN Proxy 2"
remote $MYIP $OpenVPN_TCP_Port
remote-cert-tls server
connect-retry infinite
resolv-retry infinite
nobind
persist-key
persist-tun
auth none
auth-nocache
cipher none
comp-lzo
redirect-gateway def1
setenv CLIENT_CERT 0
reneg-sec 0
verb 1
http-proxy $IPADDR $Squid_Port2
http-proxy-retry
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
<tls-auth>
$(cat /etc/openvpn/ta.key)
</tls-auth>
EOF16

cat <<EOF162> /var/www/openvpn/udp.ovpn
# Mac Quan Inc
# Thanks for using this script, Enjoy Highspeed OpenVPN Service
client
dev tun
proto udp
setenv FRIENDLY_NAME "Mac Quan Inc - VPN UDP"
remote $MYIP $OpenVPN_UDP_Port
remote-cert-tls server
resolv-retry infinite
float
fast-io
nobind
persist-key
persist-remote-ip
persist-tun
auth-user-pass
auth none
auth-nocache
cipher none
comp-lzo
redirect-gateway def1
setenv CLIENT_CERT 0
reneg-sec 0
verb 1
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
EOF162

cat <<EOF17> /var/www/openvpn/ssl.ovpn
# Mac Quan Inc
# Thanks for using this script, Enjoy Highspeed OpenVPN Service
client
dev tun
proto tcp
setenv FRIENDLY_NAME "Mac Quan Inc - VPN Proxy"
remote 127.0.0.1 $OpenVPN_TCP_Port
route $MYIP 255.255.255.255 net_gateway
resolv-retry infinite
route-method exe
nobind
persist-key
persist-tun
comp-lzo
cipher AES-256-CBC
auth SHA256
push "redirect-gateway def1 bypass-dhcp"
verb 3
push-peer-info
ping 10
ping-restart 60
hand-window 70
server-poll-timeout 4
reneg-sec 2592000
sndbuf 0
rcvbuf 0
remote-cert-tls server
key-direction 1
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
EOF17

cat <<EOF152> /var/www/openvpn/gtmwnp.ovpn
# Mac Quan Inc
# Thanks for using this script, Enjoy Highspeed OpenVPN Service
client
dev tun
proto tcp-client
setenv FRIENDLY_NAME "Mac Quan Inc - VPN Proxy"
remote $MYIP $OpenVPN_TCP_Port
nobind
persist-key
persist-tun
comp-lzo
keepalive 10 120
tls-client
remote-cert-tls server
verb 2
auth-user-pass
cipher none
auth none
auth-nocache
auth-retry interact
connect-retry 0 1
nice -20
reneg-sec 0
redirect-gateway def1
setenv CLIENT_CERT 0
dhcp-option DNS 1.1.1.1
dhcp-option DNS 1.0.0.1
http-proxy $IPADDR $Squid_Port2
http-proxy-retry
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
EOF152

cat <<EOF1152> /var/www/openvpn/sl.ovpn
# Mac Quan Inc
# Thanks for using this script, Enjoy Highspeed OpenVPN Service
client
dev tun
proto tcp-client
setenv FRIENDLY_NAME "Mac Quan Inc - VPN Proxy"
remote 127.0.0.1 $OpenVPN_SSL_Port
route $MYIP 255.255.255.255 net_gateway
nobind
persist-key
persist-tun
comp-lzo
keepalive 10 120
tls-client
remote-cert-tls server
verb 3
auth-user-pass
cipher none
auth none
auth-nocache
auth-retry interact
connect-retry 0 1
nice -20
reneg-sec 0
redirect-gateway def1
setenv CLIENT_CERT 0
dhcp-option DNS 1.1.1.1
dhcp-option DNS 1.0.0.1
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
EOF1152

cat <<EOF1632> /var/www/openvpn/suntu-dns.ovpn
# Mac Quan Inc -
# Thanks for using this script, Enjoy Highspeed OpenVPN Service
client
dev tun
proto tcp-client
setenv FRIENDLY_NAME "Mac Quan Inc - VPN"
remote $MYIP $OpenVPN_TCP_Port
nobind
persist-key
persist-tun
comp-lzo
keepalive 10 120
tls-client
remote-cert-tls server
verb 2
auth-user-pass
cipher none
auth none
auth-nocache
auth-retry interact
connect-retry 0 1
nice -20
reneg-sec 0
redirect-gateway def1
setenv CLIENT_CERT 0
dhcp-option DNS 1.1.1.1
dhcp-option DNS 1.0.0.1
http-proxy $IPADDR 3356
http-proxy-retry
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
EOF1632

# Setting UFW
apt-get install ufw
ufw allow ssh
ufw allow 1103/tcp
sed -i 's|DEFAULT_INPUT_POLICY="DROP"|DEFAULT_INPUT_POLICY="ACCEPT"|' /etc/default/ufw
sed -i 's|DEFAULT_FORWARD_POLICY="DROP"|DEFAULT_FORWARD_POLICY="ACCEPT"|' /etc/default/ufw
cat > /etc/ufw/before.rules <<-END
# START OPENVPN RULES
# NAT table rules
*nat
:POSTROUTING ACCEPT [0:0]
# Allow traffic from OpenVPN client to eth0
-A POSTROUTING -s 10.8.0.0/8 -o eth0 -j MASQUERADE
COMMIT
# END OPENVPN RULES
END
ufw status
ufw disable

# install badvpn
cd
#apt-get install cmake -y
#apt-get install screen wget gcc build-essential g++ make -y
#wget https://github.com/trngkn/badvpn/raw/main/badvpn-1.999.130.tar.gz
#tar xf badvpn-1.999.130.tar.gz
#cd badvpn-1.999.130/
#cmake /home/pi/badvpn-1.999.130 -DBUILD_NOTHING_BY_DEFAULT=1 -DBUILD_UDPGW=1
#make install
#echo "Thiet lap BADVPN tai cong 7300"
#badvpn-udpgw --listen-addr 127.0.0.1:7300 > /dev/null &
#rm /root/badupd
#echo "Thanh Cong!!"
#echo "Yahhh"
#install badvpn deb/ubun
apt-get install cmake make gcc -y
cd
wget https://github.com/ambrop72/badvpn/archive/1.999.130.tar.gz
tar xzf 1.999.130.tar.gz
mkdir badvpn-build
cd badvpn-build
cmake ~/badvpn-1.999.130 -DBUILD_NOTHING_BY_DEFAULT=1 -DBUILD_UDPGW=1
make install
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7000 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7100 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7200 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7400 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7500 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7600 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7700 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7800 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7900 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
chmod +x /usr/local/bin/badvpn-udpgw
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7000 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7100 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7200 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7400 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7500 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7600 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7700 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7800 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7900 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &

# setting port ssh
sed -i '/#Port 22/a Port 143' /etc/ssh/sshd_config
sed -i '/#Port 22/a Port  90' /etc/ssh/sshd_config
sed -i 's/#Port 22/Port  22/g' /etc/ssh/sshd_config
/etc/init.d/ssh restart

# install dropbear
apt-get -y install dropbear
sed -i 's/NO_START=1/NO_START=0/g' /etc/default/dropbear
sed -i 's/DROPBEAR_PORT=22/DROPBEAR_PORT=442/g' /etc/default/dropbear
sed -i 's/DROPBEAR_EXTRA_ARGS=/DROPBEAR_EXTRA_ARGS="-p 109 -p 110 -p 80"/g' /etc/default/dropbear
echo "/bin/false" >> /etc/shells
/etc/init.d/dropbear restart

# install stunnel
apt-get install stunnel4 -y
cat > /etc/stunnel/stunnel.conf <<-END
cert = /etc/stunnel/stunnel.pem
[dropbear]
accept = 444
connect = 127.0.0.1:442

[openvpn]
accept = 990
connect = 127.0.0.1:1103
END

# configure stunnel
sed -i 's/ENABLED=0/ENABLED=1/g' /etc/default/stunnel4
wget -O /etc/stunnel/stunnel.pem "https://raw.githubusercontent.com/gatotx/AutoScriptDebian9/main/Res/Other/stunnel.pem"
service stunnel4 restart
cd

# hapus
rm -rf /etc/nginx/conf.d/vps.conf

HAYUK='$MYIP'
# Creating OVPN download site index.html
cat <<'mySiteOvpn' > /var/www/openvpn/index.html
<!DOCTYPE html>
<html lang="en">

<!-- Simple OVPN Download site by SulaimanL -->

<head><meta charset="utf-8" /><title>SLSSH Config Download</title><meta name="description" content="MyScriptName Server" /><meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport" /><meta name="theme-color" content="#000000" /><link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css"><link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet"><link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.8.3/css/mdb.min.css" rel="stylesheet"></head><body><div class="container justify-content-center" style="margin-top:9em;margin-bottom:5em;"><div class="col-md"><div class="view"><img src="https://openvpn.net/wp-content/uploads/openvpn.jpg" class="card-img-top"><div class="mask rgba-white-slight"></div></div><div class="card"><div class="card-body"><h5 class="card-title">Config List</h5><br /><ul class="list-group"><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>Download Semua Config Yang Tersedia(TCP,UDP,SSL)(HTTP Injector dan OpenVPN)<span class="badge light-blue darken-4">Android/iOS/PC</span><br /><small>Mod By Sulaiman L</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://HAYUK:NGINXPORT/configs.zip" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>Config HTTP Injector Untuk Kuota Maxstream <span class="badge light-blue darken-4">Android/iOS/PC</span><br /><small> Mod By Sulaiman L</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://HAYUK:NGINXPORT/SL-Maxstream.ehi" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>Config HTTP Injector Untuk Kuota Youtube Telkomsel<span class="badge light-blue darken-4">Android/iOS/PC</span><br /><small> Config HTTP Injector</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://HAYUK:NGINXPORT/SL-YoutubeTsel.ehi" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>OpenVPN TCP Untuk Kuota Unlimax/Unliapps) <span class="badge light-blue darken-4">Android/PC</span><br /><small>untuk mode ssl pake port 569 dan pake aplikasi HTTP Custom yang di Play Store,SSL wajib di centang jika pake yg SSL dan mode SSL harus hapus http-proxy kalo pake openvpn </small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://HAYUK:NGINXPORT/beta.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li></ul></div></div></div></div></body></html>
mySiteOvpn
 
 # Setting template's correct name,IP address and nginx Port
sed -i "s|NGINXPORT|$OvpnDownload_Port|g" /var/www/openvpn/index.html
sed -i "s|HAYUK|$MYIP|g" /var/www/openvpn/index.html


# Restarting nginx service
systemctl restart nginx
 
  # Running screenfetch
# download script
cd
# cron job
apt-get install cron
wget https://raw.githubusercontent.com/demonk1992/membagongkan/main/crontab
mv crontab /etc/
chmod 644 /etc/crontab

# Install Screenfetch
apt-get -y install lsb-release scrot
wget -O screenfetch "https://raw.githubusercontent.com/Dreyannz/AutoScriptVPS/master/Files/Others/screenfetch"
chmod +x screenfetch

wget https://raw.githubusercontent.com/89870must73/utu/main/setupmenu && chmod +x setupmenu && ./setupmenu

 
 # Showing script's banner message

# zip
cd
cd /var/www/openvpn
zip -qq -r configs.zip
cd
# remove unnecessary files
apt -y autoremove
apt -y autoclean
apt -y clean

# grep ports 
opensshport="$(netstat -ntlp | grep -i ssh | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
dropbearport="$(netstat -nlpt | grep -i dropbear | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
stunnel4port="$(netstat -nlpt | grep -i stunnel | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
openvpnport="$(netstat -nlpt | grep -i openvpn | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
squidport="$(cat /etc/squid3/squid.conf | grep -i http_port | awk '{print $2}')"
nginxport="$(netstat -nlpt | grep -i nginx| grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"

# Info
clear
echo -e ""
echo -e "\e[94m[][][]======================================[][][]"
echo -e "\e[0m                                                   "
echo -e "\e[94m           AutoScriptVPS by  _Dreyannz_           "
echo -e "\e[94m                                                  "
echo -e "\e[94m                    Services                      "
echo -e "\e[94m                                                  "
echo -e "\e[94m    OpenSSH        :   "$opensshport
echo -e "\e[94m    Dropbear       :   "$dropbearport
echo -e "\e[94m    SSL            :   "$stunnel4port
echo -e "\e[94m    OpenVPN        :   "$openvpnport
echo -e "\e[94m    Port Squid     :   "$squidport
echo -e "\e[94m    Nginx          :   "$nginxport
echo -e "\e[94m                                                  "
echo -e "\e[94m              Other Features Included             "
echo -e "\e[94m                                                  "
echo -e "\e[94m    Timezone       :   Asia/Manila (GMT +7)       "
echo -e "\e[94m    Webmin         :   http://$MYIP:10000/        "
echo -e "\e[94m    IPV6           :   [OFF]                      "
echo -e "\e[94m    Cron Scheduler :   [ON]                       "
echo -e "\e[94m    Fail2Ban       :   [ON]                       "
echo -e "\e[94m    DDOS Deflate   :   [ON]                       "
echo -e "\e[94m    LibXML Parser  :   {ON]                       "
echo -e "\e[0m                                                   "
echo -e "\e[94m[][][]======================================[][][]\e[0m"
echo -e "\e[0m                                                   "
read -n1 -r -p "          Press Any Key To Show Commands          "
menu
cd

}
function ip_address(){
  local IP="$( ip addr | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | egrep -v "^192\.168|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[0-2]\.|^10\.|^127\.|^255\.|^0\." | head -n 1 )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipv4.icanhazip.com )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipinfo.io/ip )"
  [ ! -z "${IP}" ] && echo "${IP}" || echo
} 
